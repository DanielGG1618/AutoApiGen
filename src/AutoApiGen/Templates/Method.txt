{{ if comment -}}
    /// <summary>
    /// {{ comment }}
    /// </summary>
{{- end }}
[global::Microsoft.AspNetCore.Mvc.Http{{ http_method }}
    {{- if route != "" -}}
        ("{{ route }}")
    {{- end -}}
]
public async global::System.Threading.Tasks.Task<global::Microsoft.AspNetCore.Mvc.IActionResult> {{ name }}(
    {{ if request_type -}} [global::Microsoft.AspNetCore.Mvc.FromBody] {{ request_type }} request, {{ end }}
{{ for parameter in parameters -}}
    {{ parameter | render_parameter }},
{{ end }}
    global::System.Threading.CancellationToken cancellationToken = default
) 
{
    {{ render_deconstruction request_parameter_names "request" }} 
    
    var contract = new {{ contract_type }}(
        {{- for parameter_name in contract_parameter_names -}}
            {{ parameter_name }}: {{ parameter_name }}{{ if !for.last }}, {{ end }} 
        {{- end -}}
    );
    var result = await Mediator.Send(contract, cancellationToken);
    return Ok(result);
}